/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterPriseType.Hospital;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.AdminOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JPanel;
import Business.WorkQueue.*;
import UserInterface.DoctorRole.DoctorWorkAreaJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;

/**
 *
 * @author cheta
 */
public class PatientAppotintmentSchedule extends javax.swing.JPanel {

    /**
     * Creates new form PatientAppotintmentSchedule
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount account;
    public PatientAppotintmentSchedule(JPanel userProcessContainer,EcoSystem business,UserAccount account) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.account = account;
        populateHospitalComboBox();
        appointmentComboBox();
        populateDoctor();
        
        
    }
    private ArrayList<Network> networklist;
    private ArrayList<Enterprise> enterpriseDir;
    
    private void populateHospitalComboBox(){
        hospitalNamejComboBox1.removeAllItems();
        
        
        networklist  = business.getNetworkList();
        Network network = networklist.get(0);
        
        enterpriseDir = network.getEnterpriseDirectory().getEnterpriseList();
        for(Enterprise enterprise : enterpriseDir) {
            Enterprise.EnterPriseType type = Hospital;
            if(enterprise.getEnterpriseType().equals(type)) {
                hospitalNamejComboBox1.addItem(enterprise.getName());
            }
            
        }
        
    }
    public void populateDoctor()
    {
        doctorjComboBox1.removeAll();
        Network network = networklist.get(0);
        ArrayList<Enterprise> enterpriselist = network.getEnterpriseDirectory().getEnterpriseList();
        for( Enterprise enter : enterpriselist)
        {
            for(Organization org: enter.getOrganizationDirectory().getOrganizationList())
            {
                if(org instanceof DoctorOrganization)
                {
                  ArrayList<Employee> doctors = org.getEmployeeDirectory().getEmployeeList();
                    for(Employee emp : doctors) 
                    {
                        doctorjComboBox1.addItem(emp);
                    }  
                }
            }
        }
        
        
        
        
//        for(Organization org: )
//        {
//            if(org instanceof DoctorOrganization)
//            {
//               
//                ArrayList<Employee> doctors = org.getEmployeeDirectory().getEmployeeList();
//                for(Employee emp : doctors) 
//                {
//                    doctorjComboBox1.addItem(emp);
//                }
//                    
//            }
//        }
    }
   
    
    private void appointmentComboBox(){
        appointmentTypeJComboBox2.removeAllItems();
        
        appointmentTypeJComboBox2.addItem("Surgical");
        appointmentTypeJComboBox2.addItem("Consultancy");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hospitalNamejComboBox1 = new javax.swing.JComboBox();
        appointmentTypeJComboBox2 = new javax.swing.JComboBox<>();
        schedulejButton1 = new javax.swing.JButton();
        backjButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        doctorjComboBox1 = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(84, 162, 168));
        jLabel1.setText("Schedule An Appointment");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 22, 231, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(84, 162, 168));
        jLabel2.setText("Hospital Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 135, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(84, 162, 168));
        jLabel3.setText("Appointment Type :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 173, -1, -1));

        hospitalNamejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hospitalNamejComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNamejComboBox1ActionPerformed(evt);
            }
        });
        add(hospitalNamejComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 132, 142, -1));

        appointmentTypeJComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(appointmentTypeJComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 170, 142, -1));

        schedulejButton1.setBackground(new java.awt.Color(255, 255, 255));
        schedulejButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        schedulejButton1.setForeground(new java.awt.Color(84, 162, 168));
        schedulejButton1.setText("Schedule");
        schedulejButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        schedulejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schedulejButton1ActionPerformed(evt);
            }
        });
        add(schedulejButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 88, 36));

        backjButton.setBackground(new java.awt.Color(255, 255, 255));
        backjButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backjButton.setForeground(new java.awt.Color(84, 162, 168));
        backjButton.setText("<< Back");
        backjButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 82, 39));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(84, 162, 168));
        jLabel5.setText("Doctor :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 211, -1, -1));

        doctorjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorjComboBox1ActionPerformed(evt);
            }
        });
        add(doctorjComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 208, 142, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientLogin pljp = (PatientLogin) component;
        pljp.populateAppointmentTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backjButtonActionPerformed

    private void schedulejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schedulejButton1ActionPerformed
        // TODO add your handling code here:
       LabTestWorkRequest request = new LabTestWorkRequest();
       String appointmentType = appointmentTypeJComboBox2.getSelectedItem().toString();
       request.setSender(account);
       request.setType(appointmentType);
       request.setStatus("Sent");
       request.setRequestType(appointmentType);
       
       Organization org = null;
       
       String name = hospitalNamejComboBox1.getSelectedItem().toString();
       
       
        Enterprise enterprise = null;
        for(Enterprise ent : enterpriseDir) {
            if(ent.getName().equals(name)) {
                 enterprise = ent;
            }
        }
        
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof AdminOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Appointment Scheduled");
        }
        
        
    }//GEN-LAST:event_schedulejButton1ActionPerformed

    private void hospitalNamejComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNamejComboBox1ActionPerformed
        // TODO add your handling code here:
//        Enterprise enterp = (Enterprise)hospitalNamejComboBox1.getSelectedItem();
//        if(enterp!=null)
//        {
//            populateDoctor();
//        }
//       
//           String enter = (String) hospitalNamejComboBox1.getSelectedItem();
//           if(enter!=null)
//           {
//               populateDoctor();
//           }
    }//GEN-LAST:event_hospitalNamejComboBox1ActionPerformed

    private void doctorjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorjComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorjComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> appointmentTypeJComboBox2;
    private javax.swing.JButton backjButton;
    private javax.swing.JComboBox doctorjComboBox1;
    private javax.swing.JComboBox hospitalNamejComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton schedulejButton1;
    // End of variables declaration//GEN-END:variables
}
