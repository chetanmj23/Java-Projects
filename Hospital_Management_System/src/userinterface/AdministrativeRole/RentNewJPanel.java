/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.Rentals.Rentals;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cheta
 */
public class RentNewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RentNewJPanel
     */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount ua;
    private EcoSystem business;
    public RentNewJPanel(JPanel userProcessContainer,Enterprise enterprise, UserAccount ua,EcoSystem business) {
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.ua = ua;
        this.business=business;
        populatehospitalcombobox();
        pop();
        populate2();
        
        
    }
    
    
    public void populate2() {
        DefaultTableModel dtm = (DefaultTableModel) doctorsTranferredjTable3.getModel();
        dtm.setRowCount(0);
        
        for(Rentals rental : enterprise.getRentalsList().getRentalsList()) {
            
            if(rental.getReciever().getName().equals(enterprise.getName()))
            {
                
                if(rental.getEmployee() != null) {
                    Object[] row = new Object[3];
                    row[0] = rental;
                    row[1] = rental.getEmployee();
                    row[2] = rental.getStatus();
                    dtm.addRow(row);
                }
            }
        }
    }
    
    
    
   public void populateDoctor() {
        DefaultTableModel dtm = (DefaultTableModel) doctorsInventoryjTable2.getModel();
        dtm.setRowCount(0);
        
        
        Enterprise ent = (Enterprise)hospitalNamejComboBox1.getSelectedItem();
        for(Organization org: ent.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof DoctorOrganization)
            {
               
                ArrayList<Employee> doctors = org.getEmployeeDirectory().getEmployeeList();
                for(Employee emp : doctors) {
                    Object[] row = new Object[1];
                    
                    row[0] = emp;
                    
                    dtm.addRow(row);
                }
                
            }
        }
        
    }
            
    public void populatehospitalcombobox()
    {
        hospitalNamejComboBox1.removeAllItems();
        
        ArrayList<Network> net = business.getNetworkList();
        Network n = net.get(0);
        
        for(Enterprise ent: n.getEnterpriseDirectory().getEnterpriseList())
        {
            if(ent instanceof HospitalEnterprise)
            {
                
                if(!ent.equals(enterprise)) {
                    hospitalNamejComboBox1.addItem(ent);
                }
                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalsInventoryjTable1 = new javax.swing.JTable();
        hospitalNamejComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        qtyRentjSpinner1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rentDaysjSpinner2 = new javax.swing.JSpinner();
        requestjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        returnjButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        doctorsInventoryjTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        doctorsTranferredjTable3 = new javax.swing.JTable();
        ReturnDoctorjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(84, 162, 168));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Renting the Products");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 640, 72));

        hospitalsInventoryjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Rent"
            }
        ));
        jScrollPane1.setViewportView(hospitalsInventoryjTable1);
        if (hospitalsInventoryjTable1.getColumnModel().getColumnCount() > 0) {
            hospitalsInventoryjTable1.getColumnModel().getColumn(1).setHeaderValue("Quantity");
            hospitalsInventoryjTable1.getColumnModel().getColumn(2).setHeaderValue("Rent");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 372, 118));

        hospitalNamejComboBox1.setForeground(new java.awt.Color(84, 162, 168));
        hospitalNamejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hospitalNamejComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNamejComboBox1ActionPerformed(evt);
            }
        });
        add(hospitalNamejComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 127, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(84, 162, 168));
        jLabel2.setText("Hospital :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, -1, -1));
        add(qtyRentjSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setForeground(new java.awt.Color(84, 162, 168));
        jLabel3.setText("Qty :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(84, 162, 168));
        jLabel4.setText("Days to Rent");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, -1, -1));
        add(rentDaysjSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, -1, -1));

        requestjButton1.setBackground(new java.awt.Color(255, 255, 255));
        requestjButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        requestjButton1.setForeground(new java.awt.Color(84, 162, 168));
        requestjButton1.setText("Request");
        requestjButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        requestjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestjButton1ActionPerformed(evt);
            }
        });
        add(requestjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 76, 28));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name", "Product Name", "Quantity", "Days", "Status"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 543, 118));

        returnjButton1.setBackground(new java.awt.Color(255, 255, 255));
        returnjButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        returnjButton1.setForeground(new java.awt.Color(84, 162, 168));
        returnjButton1.setText("Return");
        returnjButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        returnjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnjButton1ActionPerformed(evt);
            }
        });
        add(returnjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, 84, 36));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(84, 162, 168));
        jLabel5.setText("Rented Products :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, -1, -1));

        backjButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(84, 162, 168));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 100, 42));

        doctorsInventoryjTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name"
            }
        ));
        jScrollPane3.setViewportView(doctorsInventoryjTable2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 124, 118));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(84, 162, 168));
        jLabel6.setText("Tranferred Doctors :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, -1, -1));

        doctorsTranferredjTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Hospital", "Status"
            }
        ));
        jScrollPane4.setViewportView(doctorsTranferredjTable3);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, 382, 90));

        ReturnDoctorjButton.setBackground(new java.awt.Color(255, 255, 255));
        ReturnDoctorjButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ReturnDoctorjButton.setForeground(new java.awt.Color(84, 162, 168));
        ReturnDoctorjButton.setText("Send Doctor Back");
        ReturnDoctorjButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ReturnDoctorjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnDoctorjButtonActionPerformed(evt);
            }
        });
        add(ReturnDoctorjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 130, 33));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(84, 162, 168));
        jButton1.setText("Request Doctor");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, 102, 28));
    }// </editor-fold>//GEN-END:initComponents

    private void populatetable(Enterprise enterp) {
        DefaultTableModel dtm = (DefaultTableModel) hospitalsInventoryjTable1.getModel();
        dtm.setRowCount(0);
        
        for(Product p : enterp.getProductList().getProductList()) {
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getQuantity();
            row[2] = p.getPrice()/10;
            dtm.addRow(row);
        }
        
    }
    
    private void pop() {
        
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        
        for(Rentals rental : enterprise.getRentalsList().getRentalsList()) {
            
            if(rental.getReciever().getName().equals(enterprise.getName()))
            {
            if(rental.getEmployee() == null) {
                Object[] row = new Object[5];
            row[0] = rental;
            row[1] = rental.getProduct();
            row[2] = rental.getQuantity();
            row[3] = rental.getDaystorent();
            row[4] = rental.getStatus();
            dtm.addRow(row);
            }
            
            }
        }
        
    }
    
    
    private void hospitalNamejComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNamejComboBox1ActionPerformed
        // TODO add your handling code here:
        
        Enterprise enterp = (Enterprise)hospitalNamejComboBox1.getSelectedItem();
        if(enterp!=null)
        {
           populatetable(enterp);
           populateDoctor();
        }
    }//GEN-LAST:event_hospitalNamejComboBox1ActionPerformed

    private void requestjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestjButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = hospitalsInventoryjTable1.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a product");
            
        }
        
        Enterprise enter = (Enterprise)hospitalNamejComboBox1.getSelectedItem();
        Product prod = (Product) hospitalsInventoryjTable1.getValueAt(selectedRow, 0);
        
        Rentals rentals = new Rentals();
        int qty = (Integer)rentDaysjSpinner2.getValue();
        int qty2 = (Integer)qtyRentjSpinner1.getValue();
        if(qty <=0)
        {
            JOptionPane.showMessageDialog(null, "number of days cannot be less than or equal to zero");
            return;
        }
        
        if(qty2 <=0)
        {
            JOptionPane.showMessageDialog(null, "Qty cannot be less than or equal to zero");
            return;
        }
        
        rentals.setProduct(prod);
        rentals.setDaystorent(qty);
        rentals.setQuantity(qty2);
        rentals.setReciever(enterprise);
        rentals.setRentperday(prod.getPrice()/10);
        rentals.setSender(enter);
        rentals.setStatus("pending");
        
        enter.getRentalsList().getRentalsList().add(rentals);
        
        enterprise.getRentalsList().getRentalsList().add(rentals);
       
                
                
       pop();
    }//GEN-LAST:event_requestjButton1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void returnjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnjButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTable2.getSelectedRow();
        boolean flag = false;
        Product pr = null;
        
        Rentals rentals = (Rentals) jTable2.getValueAt(selectedRow, 0);
        rentals.setStatus("Returned");
        
        for(Product p : enterprise.getProductList().getProductList()) {
            if(p.getProductName().equals(rentals.getProduct().getProductName())) {
                pr = p;
                
            }
        }
        
        enterprise.getProductList().removeProduct(pr);
        
        
        
        Enterprise ent = rentals.getSender();
        for( Product prod : ent.getProductList().getProductList() ) {
            if(prod.getProductName().equals(rentals.getProduct().getProductName())) {
                prod.setQuantity(prod.getQuantity()+rentals.getQuantity());
                flag = true;
            }
        }
        if(!flag) {
         ent.getProductList().addP(rentals.getProduct());
        
        }
        
        
    }//GEN-LAST:event_returnjButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = doctorsInventoryjTable2.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a doctor");
        }
        
        Enterprise ent = (Enterprise) hospitalNamejComboBox1.getSelectedItem();
        Employee doctor = (Employee) doctorsInventoryjTable2.getValueAt(selectedRow, 0);
        
        Rentals rentals = new Rentals();
        
        rentals.setEmployee(doctor);
        rentals.setDaystorent((Integer)rentDaysjSpinner2.getValue());
        rentals.setQuantity((Integer)qtyRentjSpinner1.getValue());
        rentals.setReciever(enterprise);
        //rentals.setRentperday(prod.getPrice()/10);
        rentals.setSender(ent);
        rentals.setStatus("pending");
        
        ent.getRentalsList().getRentalsList().add(rentals);
        
        enterprise.getRentalsList().getRentalsList().add(rentals);
        
        populate2();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ReturnDoctorjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnDoctorjButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = doctorsTranferredjTable3.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a doctor");
        }
        
        Rentals rentals = (Rentals) doctorsTranferredjTable3.getValueAt(selectedRow, 0);
        
        Enterprise sender = rentals.getSender();
        
        rentals.setStatus("Returned");
        
        if(rentals.getEmployee() != null) {
            ArrayList<Organization> org = sender.getOrganizationDirectory().getOrganizationList();
        
        for(Organization o : org) {
            if(o instanceof DoctorOrganization) {
                o.getEmployeeDirectory().getEmployeeList().add(rentals.getEmployee());
            }
        }
        
        ArrayList<Organization> orgn = enterprise.getOrganizationDirectory().getOrganizationList();
        
        for(Organization or : orgn) {
            if(or instanceof DoctorOrganization) {
                or.getEmployeeDirectory().getEmployeeList().remove(rentals.getEmployee());
            }
        }
        }
        
    }//GEN-LAST:event_ReturnDoctorjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReturnDoctorjButton;
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable doctorsInventoryjTable2;
    private javax.swing.JTable doctorsTranferredjTable3;
    private javax.swing.JComboBox hospitalNamejComboBox1;
    private javax.swing.JTable hospitalsInventoryjTable1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JSpinner qtyRentjSpinner1;
    private javax.swing.JSpinner rentDaysjSpinner2;
    private javax.swing.JButton requestjButton1;
    private javax.swing.JButton returnjButton1;
    // End of variables declaration//GEN-END:variables
}
