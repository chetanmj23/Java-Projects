/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.Rentals.Rentals;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cheta
 */
public class ViewRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewRequestsJPanel
     */
     private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount ua;
    private EcoSystem business;
    public ViewRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount ua, EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ua=ua;
        this.enterprise=enterprise;
        this.business=business;
        populate();
        pop();
    }
    
    
    private void pop() {
        DefaultTableModel dtm = (DefaultTableModel) doctorRequestjTable.getModel();
        dtm.setRowCount(0);
        
        
        
        for(Rentals rentals : enterprise.getRentalsList().getRentalsList()) {
            
            if(!rentals.getReciever().getName().equals(enterprise.getName())){
                
                if(rentals.getEmployee() != null) {
                    Object[] row = new Object[4];
            row[0] = rentals;
            row[1] = rentals.getEmployee();
            //row[2] = rentals.getQuantity();
            row[2] = rentals.getDaystorent();
            row[3] = rentals.getStatus();
            dtm.addRow(row);
                }
            }
        }
    }
    
    private void populate() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        
        
        for(Rentals rentals : enterprise.getRentalsList().getRentalsList()) {
            
            if(!rentals.getReciever().getName().equals(enterprise.getName())){
                
                if(rentals.getEmployee() == null) {
                    Object[] row = new Object[5];
            row[0] = rentals;
            row[1] = rentals.getSender();
            row[2] = rentals.getQuantity();
            row[3] = rentals.getDaystorent();
            row[4] = rentals.getStatus();
            dtm.addRow(row);
                }
                
                
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Approve = new javax.swing.JButton();
        reject = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctorRequestjTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        rejectRequestjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setForeground(new java.awt.Color(0, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Hospital", "Quantity", "Days", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Quantity");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, 150));

        Approve.setBackground(new java.awt.Color(255, 255, 255));
        Approve.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Approve.setForeground(new java.awt.Color(84, 162, 168));
        Approve.setText("Approve");
        Approve.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });
        add(Approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 100, 40));

        reject.setBackground(new java.awt.Color(255, 255, 255));
        reject.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reject.setForeground(new java.awt.Color(84, 162, 168));
        reject.setText("Reject");
        reject.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectActionPerformed(evt);
            }
        });
        add(reject, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 100, 40));

        backjButton1.setBackground(new java.awt.Color(255, 255, 255));
        backjButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(84, 162, 168));
        backjButton1.setText("<< Back");
        backjButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 100, 40));

        doctorRequestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Hospital", "Days", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(doctorRequestjTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, -1, 150));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(84, 162, 168));
        jButton1.setText("Approve Doctor Transfer");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, 160, 40));

        rejectRequestjButton.setBackground(new java.awt.Color(255, 255, 255));
        rejectRequestjButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rejectRequestjButton.setForeground(new java.awt.Color(84, 162, 168));
        rejectRequestjButton.setText("Reject Request");
        rejectRequestjButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rejectRequestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectRequestjButtonActionPerformed(evt);
            }
        });
        add(rejectRequestjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 460, 130, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTable1.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request");
            return;
        }
        
        Rentals rentals = (Rentals) jTable1.getValueAt(selectedRow, 0);
        
        if(rentals.getStatus().equalsIgnoreCase("Pending"))
        {
        rentals.setStatus("Approved");
        //rentals.getProduct().setQuantity(rentals.getQuantity());
        
        for(Product product : enterprise.getProductList().getProductList()) {
            if(product.getProductName().equals(rentals.getProduct().getProductName())) {
                product.setQuantity(product.getQuantity()-rentals.getQuantity());
            }
        }
        
        Enterprise entp = rentals.getReciever();
        
        //rentals.getProduct().setRented("Yes");
        Product p = rentals.getProduct();
        //p.setRented("Yes");
        //p.setQuantity(rentals.getQuantity());
        
        Product prod = entp.getProductList().addProduct();
        prod.setPrice(rentals.getRentperday()*rentals.getDaystorent());
        prod.setProductName(rentals.getProduct().getProductName());
        prod.setSender(rentals.getSender());
        prod.setQuantity(rentals.getQuantity());
        prod.setRented("yes");
        
        //entp.setBudget(entp.getBudget()-prod.getPrice()/10);
        entp.setRemaining(entp.getRemaining()+prod.getPrice());
        enterprise.setRevenue(enterprise.getBudget()+prod.getPrice());
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Already approved!");
        }
        populate();
    }//GEN-LAST:event_ApproveActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageInventoryJPanel ManageInventory = (ManageInventoryJPanel) component;
        ManageInventory.populate();
        ManageInventory.populatetab();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = doctorRequestjTable.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request");
            return;
        }
        
        Rentals rentals = (Rentals) doctorRequestjTable.getValueAt(selectedRow, 0);
        
        rentals.setStatus("Approved");
        
        Enterprise entp = rentals.getReciever();
        
        //rentals.getProduct().setRented("Yes");
        Employee e = rentals.getEmployee();
        //p.setRented("Yes");
        //p.setQuantity(rentals.getQuantity());
        
        ArrayList<Organization> org = entp.getOrganizationDirectory().getOrganizationList();
        
        for(Organization o : org) {
            if(o instanceof DoctorOrganization) {
                o.getEmployeeDirectory().getEmployeeList().add(e);
            }
        }
        
        ArrayList<Organization> orgn = enterprise.getOrganizationDirectory().getOrganizationList();
        
        for(Organization or : orgn) {
            if(or instanceof DoctorOrganization) {
                or.getEmployeeDirectory().getEmployeeList().remove(e);
            }
        }
//        Product prod = entp.getProductList().addProduct();
//        prod.setPrice(rentals.getRentperday()*rentals.getDaystorent());
//        prod.setProductName(rentals.getProduct().getProductName());
//        prod.setSender(rentals.getSender());
//        prod.setQuantity(rentals.getQuantity());
//        prod.setRented("yes");
        pop();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rejectRequestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectRequestjButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = doctorRequestjTable.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request");
            return;
        }
        
        Rentals rentals = (Rentals) doctorRequestjTable.getValueAt(selectedRow, 0);
        
        rentals.setStatus("Approved");
    }//GEN-LAST:event_rejectRequestjButtonActionPerformed

    private void rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a request");
            return;
        }
        
        Rentals rentals = (Rentals) jTable1.getValueAt(selectedRow, 0);
        
        if(rentals.getStatus().equalsIgnoreCase("Pending"))
        {
        rentals.setStatus("Rejected");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Already rejected");
        }
        populate();
    }//GEN-LAST:event_rejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve;
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable doctorRequestjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton reject;
    private javax.swing.JButton rejectRequestjButton;
    // End of variables declaration//GEN-END:variables
}
