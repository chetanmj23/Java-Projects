/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.Product.ProductCatalog;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cheta
 */
public class ManageInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageInventoryJPanel
     */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount ua;
    private EcoSystem business;
    private Enterprise supp;
    private ProductCatalog productList;
    int remainingBudget;
    public ManageInventoryJPanel(JPanel userProcessContainer,Enterprise enterprise, UserAccount ua, EcoSystem business) {
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.ua = ua;
        this.business = business;
        this.productList = enterprise.getProductList();
        for(Network network : business.getNetworkList()) {
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if(e instanceof SupplierEnterprise) {
                    supp = e;
                }
            }
        }
        populate();
        populateAdminTable();
        populatetab();
        remainingBudget = enterprise.getBudget()-enterprise.getRemaining();
        hospitalBudgetjTextField1.setText(String.valueOf(enterprise.getBudget()));
        remainingBudgetjTextField2.setText(String.valueOf(enterprise.getBudget()-enterprise.getRemaining()));
    }
    
    
    private void populateAdminTable() {
        
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
       model.setRowCount(0);
       hospitalBudgetjTextField1.setText(String.valueOf(enterprise.getBudget()));
        remainingBudgetjTextField2.setText(String.valueOf(enterprise.getBudget()-enterprise.getRemaining()));
       for(Product p : enterprise.getProductList().getProductList()) {
           Object[] row = new Object[3];
           row[0] = p;
           row[1] = p.getQuantity();
           row[2] = p.getRented();
           model.addRow(row);
       }
        
    }
    
    public void populate() {
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
       model.setRowCount(0);
       
       for(Product product : supp.getProductList().getProductList()) {
           Object[] row = new Object[3];
           row[0] = product;
           row[1] = product.getPrice();
           //row[2] = product.getRented();
           model.addRow(row);
       }
    }
    
    public void populatetab()
    {
        DefaultTableModel model = (DefaultTableModel)doctorFeildjTable.getModel();
       model.setRowCount(0);
       
       for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList())
       {
            if(org instanceof DoctorOrganization)
                {
                  ArrayList<Employee> doctors = org.getEmployeeDirectory().getEmployeeList();
                    for(Employee emp : doctors) 
                    {
                        Object[] row = new Object[2];
                        row[0] = emp;
                        
                        model.addRow(row);
                    }
       }
       
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hospitalBudgetjTextField1 = new javax.swing.JTextField();
        remainingBudgetjTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        viewRequests = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        doctorFeildjTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(84, 162, 168));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Inventory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 13, 896, 35));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Price");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 660, 111));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(84, 162, 168));
        jLabel2.setText("Hospital's Inventory");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(84, 162, 168));
        jLabel3.setText("Hospital's Budget :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, 20));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(84, 162, 168));
        jLabel4.setText("Remaining Budget :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, -1));

        hospitalBudgetjTextField1.setEnabled(false);
        add(hospitalBudgetjTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 167, -1));

        remainingBudgetjTextField2.setEnabled(false);
        add(remainingBudgetjTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 167, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(84, 162, 168));
        jButton1.setText("Add Products");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 430, 120, 40));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(84, 162, 168));
        jButton2.setText("<< Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 110, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Rented ?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(2).setHeaderValue("Rented ?");
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 660, 111));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(84, 162, 168));
        jLabel5.setText("Supplier Catalog ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jSpinner1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(84, 162, 168));
        jLabel6.setText("Qty :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(84, 162, 168));
        jButton3.setText("Rent");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, 80, 40));

        viewRequests.setBackground(new java.awt.Color(255, 255, 255));
        viewRequests.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewRequests.setForeground(new java.awt.Color(84, 162, 168));
        viewRequests.setText("View Requests");
        viewRequests.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestsActionPerformed(evt);
            }
        });
        add(viewRequests, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 490, 120, 40));

        doctorFeildjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(doctorFeildjTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 220, 90));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(84, 162, 168));
        jLabel7.setText("Available Doctors list :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        RentNewJPanel rentJPanel = new RentNewJPanel(userProcessContainer,enterprise,ua,business);
        userProcessContainer.add("RentNewJPanel", rentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        int quantity = (Integer)jSpinner1.getValue();
        if(quantity <=0)
        {
            JOptionPane.showMessageDialog(null, "Qty cannot be less than or equal to zero");
            return;
        }
        
        boolean flag = false;
        
        Product selectedProduct = (Product) jTable1.getValueAt(selectedRow, 0);
        
        for( Product prod : enterprise.getProductList().getProductList() ) {
            if(prod.getProductName().equals(selectedProduct.getProductName())) {
                prod.setQuantity(prod.getQuantity()+quantity);
                int price = prod.getPrice();
                enterprise.setRemaining(enterprise.getRemaining()+(price*quantity));
                flag = true;
                
            }
        }
        if(!flag ) {
            if(remainingBudget> selectedProduct.getPrice()*quantity){
            Product product = enterprise.getProductList().addP(selectedProduct);
        product.setQuantity(quantity);
        product.setRented("No");
        int price = product.getPrice();
        enterprise.setRemaining(enterprise.getRemaining()+(price*quantity));
        }
            else
        {
            JOptionPane.showMessageDialog(null, "Budget too low");
            return;
        }
        }
        
        populateAdminTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void viewRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestsActionPerformed
        // TODO add your handling code here:
        ViewRequestsJPanel viewJPanel = new ViewRequestsJPanel(userProcessContainer,enterprise,ua,business);
        userProcessContainer.add("ViewRequestsJPanel", viewJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewRequestsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable doctorFeildjTable;
    private javax.swing.JTextField hospitalBudgetjTextField1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField remainingBudgetjTextField2;
    private javax.swing.JButton viewRequests;
    // End of variables declaration//GEN-END:variables
}
