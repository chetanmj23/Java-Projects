/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Business;
import Business.OrderItem;
import Business.Person;
import Business.Product;
import Business.Supplier;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akhilesh Kashyap
 */
public class ViewRevenues extends javax.swing.JPanel {

    /**
     * Creates new form ViewRevenues
     */
    private JPanel userProcessContainer;
    Business business;
    Person person;
    int revenue;
    public ViewRevenues(JPanel userProcessContainer, Business business, Person person) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.person = person;
        populatecombo();
        marketrevenuecombo();
    }
    
    public void populatecombo()
    {
        for(Supplier s : business.getSupplierDirectory().getSupplierList())
        {
            supplierjComboBox1.addItem(s);
        }
    }

    public void marketrevenuecombo()
    {
        marketjComboBox2.removeAllItems();
        Object row1 = new Object();
        row1= "student";
        marketjComboBox2.addItem(row1);
        
        Object row2 = new Object();
        row2= "business";
        marketjComboBox2.addItem(row2);
        
        Object row3 = new Object();
        row3= "finance";
        marketjComboBox2.addItem(row3);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        totalRevenueJButton = new javax.swing.JButton();
        totalRevenueJTF = new javax.swing.JTextField();
        supplierjComboBox1 = new javax.swing.JComboBox();
        productRevenue = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        topSalesmenJButton = new javax.swing.JButton();
        aboveTargetSales = new javax.swing.JButton();
        belowTargetSales = new javax.swing.JButton();
        logoutjButton = new javax.swing.JButton();
        supplierRevenueJTF1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        productRevenue1 = new javax.swing.JButton();
        marketjComboBox2 = new javax.swing.JComboBox();
        marketrRevenueJTF2 = new javax.swing.JTextField();

        totalRevenueJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        totalRevenueJButton.setText("View Total Revenue");
        totalRevenueJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalRevenueJButtonActionPerformed(evt);
            }
        });

        totalRevenueJTF.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        totalRevenueJTF.setEnabled(false);

        supplierjComboBox1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N

        productRevenue.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        productRevenue.setText("Supplier Revenue");
        productRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productRevenueActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Salesperson", "Revenue", "Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        topSalesmenJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        topSalesmenJButton.setText("Top Salesmen");
        topSalesmenJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topSalesmenJButtonActionPerformed(evt);
            }
        });

        aboveTargetSales.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        aboveTargetSales.setText("Above Target Sales");
        aboveTargetSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboveTargetSalesActionPerformed(evt);
            }
        });

        belowTargetSales.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        belowTargetSales.setText("Below Target Sales");
        belowTargetSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                belowTargetSalesActionPerformed(evt);
            }
        });

        logoutjButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        logoutjButton.setText("<< Back");
        logoutjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutjButtonActionPerformed(evt);
            }
        });

        supplierRevenueJTF1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        supplierRevenueJTF1.setEnabled(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Ceiling Price", "Floor Price", "Sold Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("REVENUE");

        productRevenue1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        productRevenue1.setText("Market Revenue");
        productRevenue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productRevenue1ActionPerformed(evt);
            }
        });

        marketjComboBox2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N

        marketrRevenueJTF2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        marketrRevenueJTF2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(totalRevenueJButton)
                .addGap(18, 18, 18)
                .addComponent(totalRevenueJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(topSalesmenJButton))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(aboveTargetSales)
                .addGap(114, 114, 114)
                .addComponent(belowTargetSales))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(logoutjButton))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productRevenue1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(marketjComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(marketrRevenueJTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(supplierjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(supplierRevenueJTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalRevenueJButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(totalRevenueJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productRevenue)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(supplierjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(supplierRevenueJTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productRevenue1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(marketjComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(marketrRevenueJTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(topSalesmenJButton)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aboveTargetSales)
                    .addComponent(belowTargetSales))
                .addGap(192, 192, 192)
                .addComponent(logoutjButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logoutjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logoutjButtonActionPerformed

    private void totalRevenueJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalRevenueJButtonActionPerformed
        // TODO add your handling code here:
        for(OrderItem oi : business.getSupplierDirectory().getOrderItemAll()) {
            if(oi.getStatus().equals("Approved")) {
                revenue += oi.getPaidPrice();
            }
        }
        totalRevenueJTF.setText(String.valueOf(revenue));
    }//GEN-LAST:event_totalRevenueJButtonActionPerformed

    private void productRevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productRevenueActionPerformed
        // TODO add your handling code here:
        Supplier suppName = (Supplier) supplierjComboBox1.getSelectedItem();
        int suppRevenue = business.getSupplierDirectory().getRevenue(suppName);
        supplierRevenueJTF1.setText(String.valueOf(suppRevenue));
    }//GEN-LAST:event_productRevenueActionPerformed

    private void topSalesmenJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topSalesmenJButtonActionPerformed
        // TODO add your handling code here:
        int revenue = 0;
        Person person = business.getEmployeeDirectory().getTopPerson();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[4];
        row[0] = person.getPersonName();
        for(OrderItem oi : person.getOrders()) {
            if(oi.getStatus().equals("Approved")) {
                revenue += oi.getPaidPrice();
            }
        }
        row[1] = revenue;
        row[2] = person.getRating();
        dtm.addRow(row);
    }//GEN-LAST:event_topSalesmenJButtonActionPerformed

    private void aboveTargetSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboveTargetSalesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[5];
        for(OrderItem oi : business.getSupplierDirectory().getOrderItemAll()) {
            if(!oi.getSoldType().equals("offer")) {
                double avg = (oi.getProduct().getCeilingPrice() + oi.getProduct().getFloorPrice())/2;
                if(oi.getPaidPrice() > avg) {
                  row[0] = oi.getProduct().getProductName();
                  row[1] = oi.getQuantity();
                  row[2] = oi.getProduct().getCeilingPrice();
                  row[3] = oi.getProduct().getFloorPrice();
                  row[4] = oi.getPaidPrice();
                  dtm.addRow(row);
                }
            }
            else {
                double avg = (oi.getProduct().getMarketOffer().getCeilingPrice() + oi.getProduct().getMarketOffer().getFloorPrice())/2;
                if(oi.getPaidPrice() > avg) {
                  row[0] = oi.getProduct().getProductName();
                  row[1] = oi.getQuantity();
                  row[2] = oi.getProduct().getMarketOffer().getCeilingPrice();
                  row[3] = oi.getProduct().getMarketOffer().getFloorPrice();
                  row[4] = oi.getPaidPrice();
                  dtm.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_aboveTargetSalesActionPerformed

    private void belowTargetSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_belowTargetSalesActionPerformed
        // TODO add your handling code here:
                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[5];
        for(OrderItem oi : business.getSupplierDirectory().getOrderItemAll()) {
            if(!oi.getSoldType().equals("offer")) {
                double avg = (oi.getProduct().getCeilingPrice() + oi.getProduct().getFloorPrice())/2;
                if(oi.getPaidPrice() < avg) {
                  row[0] = oi.getProduct().getProductName();
                  row[1] = oi.getQuantity();
                  row[2] = oi.getProduct().getCeilingPrice();
                  row[3] = oi.getProduct().getFloorPrice();
                  row[4] = oi.getPaidPrice();
                  dtm.addRow(row);
                }
            }
            else {
                double avg = (oi.getProduct().getMarketOffer().getCeilingPrice() + oi.getProduct().getMarketOffer().getFloorPrice())/2;
                if(oi.getPaidPrice() < avg) {
                  row[0] = oi.getProduct().getProductName();
                  row[1] = oi.getQuantity();
                  row[2] = oi.getProduct().getMarketOffer().getCeilingPrice();
                  row[3] = oi.getProduct().getMarketOffer().getFloorPrice();
                  row[4] = oi.getPaidPrice();
                  dtm.addRow(row);
                }
            }
        }
    }//GEN-LAST:event_belowTargetSalesActionPerformed

    private void productRevenue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productRevenue1ActionPerformed
        // TODO add your handling code here:
        int revenue = 0;
        for( OrderItem oi: business.getSupplierDirectory().getOrderItemAll()) {
            if(oi.getProduct().getMarketOffer().getMarket().getMarketName().equals(marketjComboBox2.getSelectedItem()) && oi.getStatus().equals("Approved")) {
                revenue += oi.getPaidPrice();
            }
        }
        marketrRevenueJTF2.setText(String.valueOf(revenue));
    }//GEN-LAST:event_productRevenue1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboveTargetSales;
    private javax.swing.JButton belowTargetSales;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logoutjButton;
    private javax.swing.JComboBox marketjComboBox2;
    private javax.swing.JTextField marketrRevenueJTF2;
    private javax.swing.JButton productRevenue;
    private javax.swing.JButton productRevenue1;
    private javax.swing.JTextField supplierRevenueJTF1;
    private javax.swing.JComboBox supplierjComboBox1;
    private javax.swing.JButton topSalesmenJButton;
    private javax.swing.JButton totalRevenueJButton;
    private javax.swing.JTextField totalRevenueJTF;
    // End of variables declaration//GEN-END:variables
}
